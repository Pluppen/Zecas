---
import Page from "@/app/dashboard/page";
import { Toaster } from "@/components/ui/sonner"
import { getSession } from "auth-astro/server";

const session = await getSession(Astro.request);

const cookies = Astro.request.headers.get('cookie').split("; ")
const sessionToken = cookies.filter((c: string) => c.startsWith("authjs.session-token="))[0].replace("authjs.session-token=", "");

const defualtSidebarOpen = Astro.cookies.get("sidebar:state")?.value === 'true';
const response = await fetch(import.meta.env.API_URL+'/api/v1/projects', {
	headers: {
		"Authorization": `Bearer ${sessionToken}`
	}
});
const projects = await response.json();


const {breadcrumbL1, breadcrumbL2, breadcrumbL1Href} = Astro.props;
---
<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>Zecas</title>
	</head>
	<body id="wrapper">
		<Toaster client:load />
		<Page
			client:load
			defualtSidebarOpen={defualtSidebarOpen} 
			breadcrumbL1={breadcrumbL1 ?? "Scans"}
			activeUser={{...session.user, access_token: sessionToken ?? ""}}
			breadcrumbL1Href={breadcrumbL1Href ?? "/"}
			breadcrumbL2={breadcrumbL2 ?? "Results"}
			projectData={{activeProject: null, projects}}
		>
			<slot />
		</Page>
	</body>
</html>

<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
 
	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>